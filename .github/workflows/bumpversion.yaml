name: Auto-bump the version
on:
  pull_request:
    types: [closed]
    branches: [master]
  workflow_dispatch:

jobs:
  bumpversion:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies

      - name: Install requirements
        run: |
          python -m pip install generate-changelog bump-my-version

      - name: Git check
        run: |
          git config --global user.email "bump-my-version@github.actions"
          git config --global user.name "Testing Git"
          git --version
          git config --list

      - name: Generate the changelog and get the release hint
        id: generate-changelog
        run: |
          RELEASE_KIND=$(generate-changelog --output release-hint)
          echo "::notice::Suggested release type is: ${RELEASE_KIND}"
          echo "RELEASE_KIND=$RELEASE_KIND" >> $GITHUB_ENV
          echo "release-kind=$RELEASE_KIND" >> $GITHUB_OUTPUT
          echo "PACKAGE=false" >> $GITHUB_ENV

      - name: Bump Version auto
        if: ${{ github.event_name != 'workflow_dispatch' }}
        shell: bash
        run: |
          if [[ $RELEASE_KIND != "no-release" ]]; then
            bump-my-version bump -v "$RELEASE_KIND"
            git push
            git push --tags
            echo "PACKAGE=true" >> $GITHUB_ENV
          fi

      - name: Bump Version manual
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash
        run: |
          case "$RELEASE_KIND" in
            major|minor|patch)
              bump-my-version bump "$RELEASE_KIND"
              if [[ BUMPVERSION_DRY_RUN == "false" ]];  then
                git push
                git push --tags
                echo "PACKAGE=true" >> $GITHUB_ENV
              fi
              ;;
            dev)
              bump-my-version bump -v --no-commit "$RELEASE_KIND"
              echo "PACKAGE=true" >> $GITHUB_ENV
              ;;
          esac

      - name: Package
        if: ${{ env.PACKAGE == 'true' }}
        uses: hynek/build-and-inspect-python-package@v1

      - name: Upload dev release to PyPI
        if: ${{ env.PACKAGE == 'true' && env.RELEASE_KIND == 'dev' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
