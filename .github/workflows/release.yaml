name: Release
on:
  push:
    tags: ["*"]
  workflow_dispatch:

jobs:
  # Package when a new tag is pushed
  build-package:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Package
        uses: hynek/build-and-inspect-python-package@v1

  # Create a GitHub release
  release:
    name: Create a GitHub release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build-package
    steps:
      - name: Parse changelog
        shell: bash
        run: |
          function extract_version_content() {
            changelog=$1
            target_version=$2

            awk -v target="$target_version" '
              /^## / {
                if (found) exit;
                version=$2;
                if (version == target) found=1;
                next;
              }
              found { print; }
            ' <<< "$changelog"
          }

          changelog=$(cat "CHANGELOG.md")
          target_version=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=$target_version" >> $GITHUB_ENV

          content=$(extract_version_content "$changelog" "$target_version")

          if [ -n "$content" ]; then
            echo "::notice::Found release notes for ${target_version}"
            echo "RELEASE_NOTES=$content" >> $GITHUB_ENV
          else
            echo "::warning::Did not find release notes for ${target_version}"
            echo "RELEASE_NOTES=" >> $GITHUB_ENV
          fi

      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: "${{ env.TAG_NAME }}"
          body: "${{ env.RELEASE_NOTES }}"

  # Upload to Test PyPI.
  release-test-pypi:
    name: Publish in-dev package to test.pypi.org
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build-package
    steps:
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist

      - name: Upload package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

  # Upload to real PyPI on GitHub Releases.
  release-pypi:
    name: Publish released package to pypi.org
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build-package
    steps:
      - name: Download packages built by build-and-inspect-python-package
        uses: actions/download-artifact@v3
        with:
          name: Packages
          path: dist

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
